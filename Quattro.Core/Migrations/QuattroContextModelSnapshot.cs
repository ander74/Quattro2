// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Quattro.Core.Data;

namespace Quattro.Core.Migrations
{
    [DbContext(typeof(QuattroContext))]
    partial class QuattroContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062");

            modelBuilder.Entity("Quattro.Core.Data.Models.Compañero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Apellidos");

                    b.Property<int>("Calificacion");

                    b.Property<int>("Deuda");

                    b.Property<string>("Email");

                    b.Property<int>("Estado");

                    b.Property<int>("Matricula");

                    b.Property<string>("Nombre");

                    b.Property<string>("Notas");

                    b.Property<string>("Telefono");

                    b.HasKey("Id");

                    b.ToTable("Compañeros");
                });

            modelBuilder.Entity("Quattro.Core.Data.Models.DiaCalendario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Acumuladas");

                    b.Property<string>("Bus");

                    b.Property<bool>("Cena");

                    b.Property<bool>("Comida");

                    b.Property<bool>("Desayuno");

                    b.Property<bool>("EsFestivo");

                    b.Property<bool>("EsFranqueo");

                    b.Property<int>("Estado");

                    b.Property<decimal>("Euros");

                    b.Property<DateTime>("Fecha");

                    b.Property<int?>("Final");

                    b.Property<decimal>("HorasHuelga");

                    b.Property<bool>("HuelgaParcial");

                    b.Property<int?>("IncidenciaId");

                    b.Property<int?>("Inicio");

                    b.Property<bool>("IsSelected");

                    b.Property<int?>("LineaId");

                    b.Property<string>("LugarFinal");

                    b.Property<string>("LugarInicio");

                    b.Property<decimal>("Nocturnas");

                    b.Property<string>("Notas");

                    b.Property<int?>("RelevoId");

                    b.Property<string>("Servicio");

                    b.Property<int?>("SustiId");

                    b.Property<int?>("TomaDeje");

                    b.Property<decimal>("Trabajadas");

                    b.Property<int>("Turno");

                    b.HasKey("Id");

                    b.HasIndex("IncidenciaId");

                    b.HasIndex("LineaId");

                    b.HasIndex("RelevoId");

                    b.HasIndex("SustiId");

                    b.ToTable("Calendario");
                });

            modelBuilder.Entity("Quattro.Core.Data.Models.HoraAjena", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Estado");

                    b.Property<DateTime>("Fecha");

                    b.Property<decimal>("Horas");

                    b.Property<string>("Motivo");

                    b.Property<int>("Tipo");

                    b.HasKey("Id");

                    b.ToTable("HorasAjenas");
                });

            modelBuilder.Entity("Quattro.Core.Data.Models.Incidencia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Descripcion");

                    b.Property<int>("Estado");

                    b.Property<string>("Notas");

                    b.Property<int>("Tipo");

                    b.HasKey("Id");

                    b.ToTable("Incidencias");
                });

            modelBuilder.Entity("Quattro.Core.Data.Models.Linea", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Descripcion");

                    b.Property<int>("Estado");

                    b.Property<string>("Notas");

                    b.Property<string>("Numero");

                    b.HasKey("Id");

                    b.ToTable("Lineas");
                });

            modelBuilder.Entity("Quattro.Core.Data.Models.ServicioDia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("DiaCalendarioId");

                    b.Property<int>("Estado");

                    b.Property<int?>("Final");

                    b.Property<int?>("Inicio");

                    b.Property<int?>("LineaId");

                    b.Property<string>("LugarFinal");

                    b.Property<string>("LugarInicio");

                    b.Property<string>("Servicio");

                    b.Property<int>("Turno");

                    b.HasKey("Id");

                    b.HasIndex("DiaCalendarioId");

                    b.HasIndex("LineaId");

                    b.ToTable("ServiciosDia");
                });

            modelBuilder.Entity("Quattro.Core.Data.Models.ServicioLinea", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Estado");

                    b.Property<decimal>("Euros");

                    b.Property<int?>("Final");

                    b.Property<int?>("Inicio");

                    b.Property<int?>("LineaId");

                    b.Property<string>("LugarFinal");

                    b.Property<string>("LugarInicio");

                    b.Property<string>("Notas");

                    b.Property<string>("Servicio");

                    b.Property<int?>("TomaDeje");

                    b.Property<int>("Turno");

                    b.HasKey("Id");

                    b.HasIndex("LineaId");

                    b.ToTable("ServiciosLinea");
                });

            modelBuilder.Entity("Quattro.Core.Data.Models.ServicioSecundario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Estado");

                    b.Property<int?>("Final");

                    b.Property<int?>("Inicio");

                    b.Property<int?>("LineaId");

                    b.Property<string>("LugarFinal");

                    b.Property<string>("LugarInicio");

                    b.Property<string>("Servicio");

                    b.Property<int?>("ServicioLineaId");

                    b.Property<int>("Turno");

                    b.HasKey("Id");

                    b.HasIndex("LineaId");

                    b.HasIndex("ServicioLineaId");

                    b.ToTable("ServiciosSecundarios");
                });

            modelBuilder.Entity("Quattro.Core.Data.Models.DiaCalendario", b =>
                {
                    b.HasOne("Quattro.Core.Data.Models.Incidencia", "Incidencia")
                        .WithMany()
                        .HasForeignKey("IncidenciaId");

                    b.HasOne("Quattro.Core.Data.Models.Linea", "Linea")
                        .WithMany()
                        .HasForeignKey("LineaId");

                    b.HasOne("Quattro.Core.Data.Models.Compañero", "Relevo")
                        .WithMany()
                        .HasForeignKey("RelevoId");

                    b.HasOne("Quattro.Core.Data.Models.Compañero", "Susti")
                        .WithMany()
                        .HasForeignKey("SustiId");
                });

            modelBuilder.Entity("Quattro.Core.Data.Models.ServicioDia", b =>
                {
                    b.HasOne("Quattro.Core.Data.Models.DiaCalendario")
                        .WithMany("Servicios")
                        .HasForeignKey("DiaCalendarioId");

                    b.HasOne("Quattro.Core.Data.Models.Linea", "Linea")
                        .WithMany()
                        .HasForeignKey("LineaId");
                });

            modelBuilder.Entity("Quattro.Core.Data.Models.ServicioLinea", b =>
                {
                    b.HasOne("Quattro.Core.Data.Models.Linea", "Linea")
                        .WithMany("Servicios")
                        .HasForeignKey("LineaId");
                });

            modelBuilder.Entity("Quattro.Core.Data.Models.ServicioSecundario", b =>
                {
                    b.HasOne("Quattro.Core.Data.Models.Linea", "Linea")
                        .WithMany()
                        .HasForeignKey("LineaId");

                    b.HasOne("Quattro.Core.Data.Models.ServicioLinea")
                        .WithMany("Servicios")
                        .HasForeignKey("ServicioLineaId");
                });
#pragma warning restore 612, 618
        }
    }
}
