// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Quattro.Core.Data;

namespace Quattro.Core.Migrations
{
    [DbContext(typeof(QuattroContext))]
    [Migration("20190701060519_Inicio")]
    partial class Inicio
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062");

            modelBuilder.Entity("Quattro.Core.Data.Entities.CompañeroEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Apellidos");

                    b.Property<int>("Calificacion");

                    b.Property<int>("Deuda");

                    b.Property<string>("Email");

                    b.Property<int>("Matricula");

                    b.Property<string>("Nombre");

                    b.Property<string>("Notas");

                    b.Property<string>("Telefono");

                    b.HasKey("Id");

                    b.ToTable("Companeros");
                });

            modelBuilder.Entity("Quattro.Core.Data.Entities.DiaCalendarioEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Acumuladas");

                    b.Property<string>("Bus");

                    b.Property<bool>("Cena");

                    b.Property<bool>("Comida");

                    b.Property<bool>("Desayuno");

                    b.Property<bool>("EsFestivo");

                    b.Property<bool>("EsFranqueo");

                    b.Property<decimal>("Euros");

                    b.Property<DateTime>("Fecha");

                    b.Property<int?>("Final");

                    b.Property<decimal>("HorasHuelga");

                    b.Property<bool>("HuelgaParcial");

                    b.Property<int?>("IncidenciaId");

                    b.Property<int?>("Inicio");

                    b.Property<int?>("LineaId");

                    b.Property<string>("LugarFinal");

                    b.Property<string>("LugarInicio");

                    b.Property<decimal>("Nocturnas");

                    b.Property<string>("Notas");

                    b.Property<int?>("RelevoId");

                    b.Property<string>("Servicio");

                    b.Property<int?>("SustiId");

                    b.Property<int?>("TomaDeje");

                    b.Property<decimal>("Trabajadas");

                    b.Property<int>("Turno");

                    b.HasKey("Id");

                    b.HasIndex("IncidenciaId");

                    b.HasIndex("LineaId");

                    b.HasIndex("RelevoId");

                    b.HasIndex("SustiId");

                    b.ToTable("Calendario");
                });

            modelBuilder.Entity("Quattro.Core.Data.Entities.HoraAjenaEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Fecha");

                    b.Property<decimal>("Horas");

                    b.Property<string>("Motivo");

                    b.Property<int>("Tipo");

                    b.HasKey("Id");

                    b.ToTable("HorasAjenas");
                });

            modelBuilder.Entity("Quattro.Core.Data.Entities.IncidenciaEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Descripcion");

                    b.Property<string>("Notas");

                    b.Property<int>("Tipo");

                    b.HasKey("Id");

                    b.ToTable("Incidencias");
                });

            modelBuilder.Entity("Quattro.Core.Data.Entities.LineaEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Descripcion");

                    b.Property<string>("Notas");

                    b.Property<string>("Numero");

                    b.HasKey("Id");

                    b.ToTable("Lineas");
                });

            modelBuilder.Entity("Quattro.Core.Data.Entities.ServicioDiaEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("DiaCalendarioEntityId");

                    b.Property<int?>("Final");

                    b.Property<int?>("Inicio");

                    b.Property<int?>("LineaId");

                    b.Property<string>("LugarFinal");

                    b.Property<string>("LugarInicio");

                    b.Property<string>("Servicio");

                    b.Property<int>("Turno");

                    b.HasKey("Id");

                    b.HasIndex("DiaCalendarioEntityId");

                    b.HasIndex("LineaId");

                    b.ToTable("ServiciosDia");
                });

            modelBuilder.Entity("Quattro.Core.Data.Entities.ServicioLineaEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Euros");

                    b.Property<int?>("Final");

                    b.Property<int?>("Inicio");

                    b.Property<int?>("LineaId");

                    b.Property<string>("LugarFinal");

                    b.Property<string>("LugarInicio");

                    b.Property<string>("Notas");

                    b.Property<string>("Servicio");

                    b.Property<int?>("TomaDeje");

                    b.Property<int>("Turno");

                    b.HasKey("Id");

                    b.HasIndex("LineaId");

                    b.ToTable("ServiciosLinea");
                });

            modelBuilder.Entity("Quattro.Core.Data.Entities.ServicioSecundarioEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("Final");

                    b.Property<int?>("Inicio");

                    b.Property<int?>("LineaId");

                    b.Property<string>("LugarFinal");

                    b.Property<string>("LugarInicio");

                    b.Property<string>("Servicio");

                    b.Property<int?>("ServicioLineaEntityId");

                    b.Property<int>("Turno");

                    b.HasKey("Id");

                    b.HasIndex("LineaId");

                    b.HasIndex("ServicioLineaEntityId");

                    b.ToTable("ServiciosSecundarios");
                });

            modelBuilder.Entity("Quattro.Core.Data.Entities.DiaCalendarioEntity", b =>
                {
                    b.HasOne("Quattro.Core.Data.Entities.IncidenciaEntity", "Incidencia")
                        .WithMany()
                        .HasForeignKey("IncidenciaId");

                    b.HasOne("Quattro.Core.Data.Entities.LineaEntity", "Linea")
                        .WithMany()
                        .HasForeignKey("LineaId");

                    b.HasOne("Quattro.Core.Data.Entities.CompañeroEntity", "Relevo")
                        .WithMany()
                        .HasForeignKey("RelevoId");

                    b.HasOne("Quattro.Core.Data.Entities.CompañeroEntity", "Susti")
                        .WithMany()
                        .HasForeignKey("SustiId");
                });

            modelBuilder.Entity("Quattro.Core.Data.Entities.ServicioDiaEntity", b =>
                {
                    b.HasOne("Quattro.Core.Data.Entities.DiaCalendarioEntity")
                        .WithMany("Servicios")
                        .HasForeignKey("DiaCalendarioEntityId");

                    b.HasOne("Quattro.Core.Data.Entities.LineaEntity", "Linea")
                        .WithMany()
                        .HasForeignKey("LineaId");
                });

            modelBuilder.Entity("Quattro.Core.Data.Entities.ServicioLineaEntity", b =>
                {
                    b.HasOne("Quattro.Core.Data.Entities.LineaEntity", "Linea")
                        .WithMany("Servicios")
                        .HasForeignKey("LineaId");
                });

            modelBuilder.Entity("Quattro.Core.Data.Entities.ServicioSecundarioEntity", b =>
                {
                    b.HasOne("Quattro.Core.Data.Entities.LineaEntity", "Linea")
                        .WithMany()
                        .HasForeignKey("LineaId");

                    b.HasOne("Quattro.Core.Data.Entities.ServicioLineaEntity")
                        .WithMany("Servicios")
                        .HasForeignKey("ServicioLineaEntityId");
                });
#pragma warning restore 612, 618
        }
    }
}
